@model Entities.EDMX.Gasto

@{
    ViewBag.Title = "Crear Gasto";
}
@{Html.RenderPartial("~/Views/Partials/pv_breadcrump.cshtml");}

@if (TempData["Creado"] != null && (string)TempData["Creado"] != "FALSO")
{
    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
        ¡Consorcio <strong>creado correctamente!</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["Creado"] != null && (string)TempData["Creado"] == "FALSO")
{
    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
        <strong>¡Error</strong> al crear!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<h2>Crear Gasto</h2>

@using (Html.BeginForm("Crear", "Gastos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <p>A continuación ingrese los datos del gasto nuevo</p>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <input type="hidden" name="IdConsorcio" value="@ViewBag.idConsorcio" />
    
    <div class="form-group">
        @Html.Label("Consorcio", htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-lg-6 col-md-12">
            @Html.Raw("<div class=" + "form-control " + "readonly" + ">" + ViewBag.nombreConsorcio + "</div>")
            @Html.ValidationMessageFor(model => model.Consorcio.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.TipoGasto, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-lg-6 col-md-12">
            @Html.DropDownListFor(Model => Model.IdTipoGasto, (List<SelectListItem>)ViewBag.TipoGastoItem, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IdTipoGasto, "", new { @class = "text-danger " })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-6" })
        <div class="col-lg-6 col-md-12">
            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaGasto, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.FechaGasto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaGasto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MesExpensa, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.MesExpensa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MesExpensa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AnioExpensa, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.AnioExpensa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AnioExpensa, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ArchivoComprobante, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                <input type="file" name="ArchivoComprobante" />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Monto, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.Monto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Monto, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <input id="otraAccion" type="hidden" name="otraAccion" value="" />
        </div>


        <div class="form-group mt-4">
            <div class="col-md-offset-2 col-md-10 px-0">
                <input type="submit" value="Guardar" class="btn btn-success ml-0 mr-2" />

                <input onclick="crearOtro()" type="submit" value="Guardar y Crear otro Gasto" class="btn btn-primary ml-0 mr-2" />

                @Html.ActionLink("Cancelar", "Listado/", new { id = ViewBag.idConsorcio } , new { @class = "btn btn-danger ml-0 mr-2" })
            </div>
        </div>
    </div>
</div>
}

@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/custom")
