@model Entities.EDMX.Consorcio

@{
    ViewBag.Title = "Crear Consorcio";
}

@{Html.RenderPartial("~/Views/Partials/pv_breadcrump.cshtml");}

@if (TempData["Creado"] != null && (string)TempData["Creado"] != "FALSO")
{
    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
        ¡Consorcio <strong>creado correctamente!</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

@if (TempData["Creado"] != null && (string)TempData["Creado"] == "FALSO")
{
    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
        <strong>¡Error</strong> al crear!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}

<h2>Crear Consorcio</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <p>A continuación ingrese los datos del consorcio nuevo</p>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { onkeyup = "buscarConsorcioPorNombre(this.value, " + (int)Session["usuarioId"] + ")", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                <div id="existeNombreCons" class="text-danger"></div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Provincia, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.DropDownListFor(Model => Model.IdProvincia, (List<SelectListItem>)ViewBag.ProvinciasItems, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdProvincia, "", new { @class = "text-danger " })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ciudad, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.Ciudad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ciudad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Calle, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.Calle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Calle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Altura, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.Altura, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Altura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiaVencimientoExpensas, htmlAttributes: new { @class = "control-label col-md-6" })
            <div class="col-lg-6 col-md-12">
                @Html.EditorFor(model => model.DiaVencimientoExpensas, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DiaVencimientoExpensas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <input id="otraAccion" type="hidden" name="otraAccion" value="" />
        </div>


        <div class="form-group mt-4">
            <div class="col-md-offset-2 col-md-10 px-0">
                <input type="submit" value="Guardar" class="btn btn-success ml-0 mr-2" />

                <input onclick="crearOtro()" type="submit" value="Guardar y Crear otro Consorcio" class="btn btn-primary ml-0 mr-2" />

                <input onclick="crearUnidades()" type="submit" value="Guardar y Crear Unidades" class="btn btn-primary ml-0 mr-2" />

                @Html.ActionLink("Cancelar", "Listado", null, new { @class = "btn btn-danger ml-0 mr-2" })
            </div>
        </div>
    </div>
}

@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/custom")