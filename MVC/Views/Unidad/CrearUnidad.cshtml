@model Entities.EDMX.Unidad

@{
    ViewBag.Title = "Crear Unidad";
}

@{Html.RenderPartial("~/Views/Partials/pv_breadcrump.cshtml");}

@if (TempData["Creado"] != null && (string)TempData["Creado"] != "FALSO")
{
    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
        ¡Unidad <strong>creada correctamente!</strong>
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@if (TempData["Creado"] != null && (string)TempData["Creado"] == "FALSO")
{
    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
        <strong>¡Error</strong> al crear!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}


<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center mb-1">

    <h2>Crear Unidad</h2>
    <a onclick="volver()" class="btn btn-success">Volver</a>

</div>

<p>A continuación ingrese los datos de la unidad nueva</p>
<hr />
@using (Html.BeginForm())
{
    <section class="row">

        <article class="col-lg-6 col-sm-12">

            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Consorcio.Nombre, htmlAttributes: new {@class = "control-label col-md-6" })
                    <div class="">
                        <input class="form-control" id="disabledInput" type="text" placeholder="@ViewBag.Consorcio.Nombre" disabled>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { onkeyup = "buscarUnidadPorNombre(this.value, " + Session["usuarioId"].ToString() + ")", @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        <div id="existeNombreCons" class="text-danger"></div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NombrePropietario, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="">
                        @Html.EditorFor(model => model.NombrePropietario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NombrePropietario, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ApellidoPropietario, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="">
                        @Html.EditorFor(model => model.ApellidoPropietario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ApellidoPropietario, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailPropietario, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="">
                        @Html.EditorFor(model => model.EmailPropietario, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailPropietario, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Superficie, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="">
                        @Html.EditorFor(model => model.Superficie, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Superficie, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <input type="hidden" name="IdConsorcio" value="@ViewBag.Consorcio.IdConsorcio" />
                    <input id="otraAccion" type="hidden" name="otraAccion" value="" />
                </div>
            </div>

        </article>

        <article class="col-lg-6 col-sm-12 d-block text-center mb-0 crear-alto">

            <article class="border rounded bg-light mb-5 mt-3">
                <div class="card-body">
                    <h5 class="card-title m-4">Seguí creando</h5>
                    <div class="card-text">
                        <p>Guardá la unidad creada y continuá haciendo otra unidad.</p>
                        <input onclick="crearOtro()" type="submit" value="Guardar y Crear otra Unidad" class="btn btn-link ml-0 mr-2" />
                    </div>
                </div>
            </article>
        </article>

        <div class="form-group">
            <div class="px-2">
                <input type="submit" value="Guardar" class="btn btn-success ml-0 mr-2" />
                @Html.ActionLink("Cancelar", "Listado", new { id = ViewBag.Consorcio.IdConsorcio }, new { @class = "btn btn-danger ml-0 mr-2" })
            </div>
        </div>

    </section>
}
@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/bundles/custom")
